<% layout('layout.ejs') %>
<% block('title', __('dashboard')) -%>

<!-- DataTables -->
<% script('js/jquery.jeditable.mini.js') %>
<% script('js/jquery.dataTables.editable.js') %>
<% script('http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.js') %>
<% stylesheet('http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css') %> 

<!-- ShowPad -->
<% stylesheet('css/dashboard.css') %>

<% script('http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js') %>

<div id="tabs">
  <ul class="nav nav-tabs" data-tabs="tabs">
    <li class="active"><a href="#users" data-toggle="tab"><%= __('dashboard.users') %></a></li>
    <li><a href="#docs" data-toggle="tab"><%= __('dashboard.docs') %></a></li>
    <li><a href="#groups" data-toggle="tab"><%= __('dashboard.groups') %></a></li>
  </ul>
  <div id="my-tab-content" class="tab-content">
    <div class="tab-pane active" id="users">
        <table id="usertable">
            <thead>
                <tr>
                    <th><%= __('dashboard.users.name') %></th>
                    <th><%= __('dashboard.users.email') %></th>
                    <th><%= __('dashboard.users.role') %></th>
                    <th><%= __('dashboard.users.status') %></th>
                    <th><%= __('dashboard.users.groups') %></th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
    <div class="tab-pane" id="docs">
        <table id="padtable">
            <thead>
                <tr>
                    <th><%= __('dashboard.docs.name') %></th>
                    <th><%= __('dashboard.docs.type') %></th>
                    <th><%= __('dashboard.docs.group') %></th>
                    <th></th>
                </tr>
            </thead>
        </table>
        <br>
        <div>
            <h3><%= __('dashboard.docs.create') %></h3>
            <div class="alert alert-error" id="docs-create-error" style="display:none"></div>
            <div class="alert alert-success" id="docs-create-success" style="display:none"><%= __('dashboard.docs.create.success') %></div>
            <div class="form-inline">
                <label class="control-label" for="docname"><%= __('dashboard.docs.create.name') %></label>
                <input type="text" id="docname" name="docname">

                <label class="control-label" for="doctype"><%= __('dashboard.docs.create.type') %></label>
                <select id="doctype" name="doctype" >
                    <option value="etherpad">Etherpad</option>
                </select>
                
                <label class="control-label" for="docgroup"><%= __('dashboard.docs.create.group') %></label>
                <select id="docgroup" name="docgroup" class="groupSelect">
                    <option value="">Loading..</option>
                </select>

                <button class="btn primary" type="submit" id="create-doc"><%= __('dashboard.docs.create.submit') %></button>
            </div>
        </div>
    </div>
    <div class="tab-pane" id="groups">
        <table id="grouptable">
            <thead>
                <tr>
                    <th><%= __('dashboard.groups.short') %></th>
                    <th><%= __('dashboard.groups.name') %></th>
                    <th><%= __('dashboard.groups.type') %></th>
                    <th></th>
                </tr>
            </thead>
        </table>
        <br>
        <div>
            <h3><%= __('dashboard.docs.create') %></h3>
            <div class="alert alert-error" id="groups-create-error" style="display:none"></div>
            <div class="alert alert-success" id="groups-create-success" style="display:none"><%= __('dashboard.groups.create.success') %></div>
            <div class="form-inline">
                <label class="control-label" for="groupname"><%= __('dashboard.groups.create.name') %></label>
                <input type="text" id="groupname" name="groupname">
                
                <label class="control-label" for="groupshort"><%= __('dashboard.groups.create.short') %></label>
                <input type="text" id="groupshort" name="groupshort">

                <label class="control-label" for="grouptype"><%= __('dashboard.groups.create.type') %></label>
                <select id="grouptype" name="grouptype" >
                    <option value="open"><%= __('dashboard.groups.create.type.open') %></option>
                    <option value="closed"><%= __('dashboard.groups.create.type.closed') %></option>
                </select>

                <button class="btn primary" type="submit" id="create-group"><%= __('dashboard.groups.create.submit') %></button>
            </div>
        </div>
    </div>
  </div>
</div>

<script>
var groups = []

$(function ()
{
    refreshGroups();
    $('#create-doc').click(createDoc);
    $('#create-group').click(createGroup);

    $.fn.dataTableExt.sErrMode = 'throw';

    padtable = $('#padtable')
            .dataTable(
            {
                bProcessing: true,
                sAjaxSource: "/api/1/docs/?datatables=1",
                sAjaxDataProp: "data",
                oLanguage: { sUrl: "/js/datatableslocales/<%=locale%>.json" },
                aoColumns: [
                    {
                        mData: [ "docname" ],
                        fnRender: function (oObj)
                        {
                            var docname = oObj.aData.docname;
                            return "<a href='<%= pageurl %>doc/" + docname + "'>" + docname + "</a>";
                        }
                    },
                    { mData: [ "type" ] },
                    { mData: [ "group" ] },
                    {
                        mData: null,
                        bSortable: false,
                        sDefaultContent: '',
                        fnRender: function (oObj) { return addRowButtons(oObj, 'docs') }
                    }
                ]
            });

    grouptable = $('#grouptable');
    grouptable = grouptable.dataTable(
            {
                bProcessing: true,
                sAjaxSource: "/api/1/groups/?datatables=1",
                sAjaxDataProp: "data",
                oLanguage: { sUrl: "/js/datatableslocales/<%=locale%>.json" },
                aoColumns: [
                    { mData: [ "short" ] },
                    { mData: [ "name" ] },
                    {
                        mData: [ "type" ],
                        fnRender: function (oObj)
                        {
                            var type = oObj.aData.type;
                            type = type.charAt(0).toUpperCase() + type.slice(1);
                            return type;
                        }
                    },
                    {
                        mData: null,
                        bSortable: false,
                        sDefaultContent: '',
                        fnRender: function (oObj) { return addRowButtons(oObj, 'groups') }
                    }
                ]
            });

    usertable = $('#usertable');
    usertable = usertable.dataTable(
            {
                bProcessing: true,
                sAjaxSource: "/api/1/users/?datatables=1",
                sAjaxDataProp: "data",
                oLanguage: { sUrl: "/js/datatableslocales/<%=locale%>.json" },
                aoColumns: [
                    { mData: [ "username" ] },
                    { mData: [ "email" ] },
                    {
                        mData: [ "roles" ],
                        fnRender: function (oObj)
                        {
                            var roles = oObj.aData.roles;
                            if(roles.indexOf('admin') != -1 || roles == "Admin")
                                return "Admin";
                            if(roles.indexOf('user') != -1 || roles == "User")
                                return "User";
                        }
                    },
                    {
                        mData: [ "status" ],
                        fnRender: function (oObj)
                        {
                            var status = oObj.aData.status;
                            status = status.charAt(0).toUpperCase() + status.slice(1);
                            return status;
                        }
                    },
                    {
                        mData: [ "groups" ],
                        fnRender: function (oObj)
                        {
                            var groups = oObj.aData.groups;
                            return groups.join(", ");
                        }
                    },
                    {
                        mData: null,
                        bSortable: false,
                        sDefaultContent: '',
                        fnRender: function (oObj) { return addRowButtons(oObj, 'users') }
                    }
                ]
            });

    usertable.makeEditable(
            {
                sUpdateURL: updateUser,
                aoColumns:
                        [
                            null,
                            null,
                            {
                                event: 'click',
                                indicator: '<%= __("dashboard.users.selectrole") %>',
                                loadtext: 'loading...',
                                id: "userRole",
                                type: 'select',
                                onblur: 'submit',
                                data: "{'admin':'Admin','user':'User'}"
                            },
                            {
                                event: 'click',
                                indicator: '<%= __("dashboard.users.selectstatus") %>',
                                loadtext: 'loading...',
                                id: "userStatus",
                                type: 'select',
                                onblur: 'submit',
                                data: "{'banned':'Banned','email':'Email','normal':'Normal'}"
                            }
                        ]
            });

    grouptable.makeEditable(
            {
                sUpdateURL: updateGroup,
                aoColumns:
                        [
                            null,
                            {
                                event: 'click',
                                indicator: '<%= __("dashboard.groups.selectrole") %>',
                                loadtext: 'loading...',
                                id: "groupName",
                                onblur: 'submit'
                            },
                            {
                                event: 'click',
                                indicator: '<%= __("dashboard.groups.selecttype") %>',
                                loadtext: 'loading...',
                                id: "groupType",
                                type: 'select',
                                onblur: 'submit',
                                data: "{'open':'Open','closed':'Closed'}"
                            }
                        ]
            });
});

function refreshGroups()
{
    $.ajax("/api/1/groups/")
        .success(function(response)
        {
            $(".groupSelect").each(function (i, select) { $(select).empty(); });
            $.each(response.data,
                function (i, group)
                {
                    var short = group.short;
                    var name = group.name;

                    $(".groupSelect").each(
                        function (i, select)
                        {
                            $(select).append(new Option(name + " (" + short + ")", short));
                        }
                    );
                }
            )
        });
}

function addRowButtons(oObj, type)
{
    var rowId = oObj.aData.DT_RowId;
    var rowIndex = oObj.iDataRow;
    return '<a href="#" data-type="'     + type     + '"' +
           ' data-rowindex="' + rowIndex + '"' +
           ' data-rowid="'    + rowId    + '"' +
           ' onclick="deleteThing(this)" class="pull-right"><%= __("dashboard.delete") %> <i class="icon-trash"></i></a>';
}

function createDoc()
{
    var thing =
    {
        docname: $('#docname').val(),
        type: $('#doctype').val(),
        group: $('#docgroup').val()
    };

    var errors =
    {
        docexists: "<%= __('dashboard.docs.create.error.exists') %>",
        default: "<%= __('dashboard.docs.create.error.other') %>"
    };

    createThing('docs', thing, thing.docname, errors);
}

function createGroup()
{
    var thing =
    {
        short: $('#groupshort').val(),
        name: $('#groupname').val(),
        type: $('#grouptype').val()
    };

    var errors =
    {
        groupexists: "<%= __('dashboard.groups.create.error.exists') %>",
        default: "<%= __('dashboard.groups.create.error.other') %>"
    };

    createThing('groups', thing, thing.short, errors, refreshGroups);
}

function deleteThing(element)
{
    element = $(element);
    // disable link, http://stackoverflow.com/a/13977403
    element.css('pointer-events', 'none');

    var id = element.data('rowid');
    var index = element.data('rowindex');
    var type = element.data('type');

    var confirmMsg = "<%= __('dashboard.delete.confirm') %>".replace('$THING', id);
    var failMsg = "<%= __('dashboard.delete.fail') %>".replace('$THING', id);

    if(confirm(confirmMsg))
    {
        $.ajax(
            {
                type: "DELETE",
                url: "/api/1/" + type + "/" + id
            }).success(function ()
            {
                var table = getTableForType(type);
                table.fnDeleteRow(index, null, true);
            }).fail(function ()
            {
                alert(failMsg);
                element.css('pointer-events', ""); // re-enable link
            });
    }
}

function updateGroup(value, settings)
{
    var error = "<%= __('dashboard.groups.error.update') %>";
    var rawData = getDataFromDTValue(this, grouptable, settings, 0);
    var username = rawData.data;
    var data = {};

    if(rawData.rowName == "groupType")
    {
        data.type = value;
    }
    else if(rawData.rowName == "groupName")
    {
        data.name = value;
    }

    return updateThing("groups", username, error, data, value, settings, refreshGroups);
}

function updateUser(value, settings)
{
    var error = "<%= __('dashboard.users.error.update') %>";
    var rawData = getDataFromDTValue(this, usertable, settings, 0);
    var username = rawData.data;
    var data = {};

    if(rawData.rowName == "userRole")
    {
        data.roles = [ "user" ];
        if(value == "admin")
            data.roles.push("admin");
    }
    else if(rawData.rowName == "userStatus")
    {
        data.status = value;
    }

    return updateThing("users", username, error, data, value, settings, refreshGroups);
}

function updateThing(type, name, error, data, value, settings, cb)
{
    var returnValue = error;
    console.log(arguments)

    $.ajax(
        {
            type: "PUT",
            url: "/api/1/" + type + "/" + name,
            async: false,
            data: data
        }).success(function ()
        {
            // don't return an error
            returnValue = value;
        }).fail(function ()
        {
            // return an error later and reset the local value
            settings.onreset();
        });

    if(cb)
        cb();

    return returnValue;
}

function getDataFromDTValue(that, table, settings, index)
{
    // http://stackoverflow.com/questions/13316209/#13321785
    var rowId = table.fnGetPosition(that)[0];
    var rowName = settings.id;
    var data = table.fnGetData(rowId, index);

    return { rowName: rowName, data: data }
}

function createThing(type, thing, name, errors, cb)
{
    var createSuccess = $('#' + type + '-create-success');
    var createError = $('#' + type + '-create-error');

    $.post('api/1/' + type, thing)
            .done(function (res)
            {
                var rtnThing = res.data;
                var table = getTableForType(type);

                rtnThing.DT_RowId = name;
                table.fnAddData(rtnThing);

                createSuccess.show();
                createError.hide();

                if(cb)
                    cb();
            })
            .fail(function (res)
            {
                var msg = JSON.parse(res.responseText).message;

                if(errors[msg])
                    msg = errors[msg];
                else
                    msg = errors["default"];

                createError.text(msg);
                createSuccess.hide();
                createError.show();

                if(cb)
                    cb();
            });
}

function getTableForType(type)
{
    var table = null;

    switch(type)
    {
        case "users":
            table = usertable;
            break;
        case "docs":
            table = padtable;
            break;
        case "groups":
            table = grouptable;
            break;
    }

    return table;
}
</script>
