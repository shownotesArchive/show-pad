<!-- included by doc.ejs -->
<% stylesheet('//selfcss.org/baf/css/baf.min.css') %>
<% stylesheet('//selfcss.org/baf/css/icomoon.css') %>
<% stylesheet('//shownotes.github.io/tinyOSF.js/shownotes.css') %>
<% script('//selfcss.org/baf/js/baf.min.js') %>
<% script('/js/tinyosf/tinyosf.js') %>
<% script('/js/tinyosf/tinyosf_exportmodules.js') %>

<span><%- __('showdoc.error.readonly.' + readonlyReason, '/doc/' + docname) %></span>
<br/><br/>
<span><%= __('showdoc.readonly.users') %> <span id="users"></span></span>

<br/><h4 style="display: inline-block; vertical-align: text-bottom;"><%= __('showdoc.readonly.format') %>: </h4>
<div id="format" class="nav baf-group baf-group-x1" style="margin: 10px 10px 0 10px;">
    <a class="baf grey viewbut" href="#htmllist" data-format="htmllist"><%= __('showdoc.readonly.format.list') %></a>
    <a class="baf grey viewbut" href="#html" data-format="html"><%= __('showdoc.readonly.format.block') %></a>
    <a class="baf grey viewbut" href="#md" data-format="md"><%= __('showdoc.readonly.format.markdown') %></a>
    <a class="baf grey viewbut" href="#reaper" data-format="reaper"><%= __('showdoc.readonly.format.reaper') %></a>
    <a class="baf grey viewbut" href="#audacity" data-format="audacity"><%= __('showdoc.readonly.format.audacity') %></a>
    <a class="baf grey viewbut" href="#chapter" data-format="chapter"><%= __('showdoc.readonly.format.chapters') %></a>
    <a class="baf grey viewbut" href="#osf" data-format="osf"><%= __('showdoc.readonly.format.osf') %></a>
    <a class="baf grey viewbut" href="#raw" data-format="raw"><%= __('showdoc.readonly.format.raw') %></a>
</div><div class="baf-group baf-group-x1">
  <a class="baf green" onclick="dlbut();">
    <span class="baf-icomoon big" aria-hidden="true" data-icon="&#xe074;">
    </span>
  </a>
</div>
<hr/>
<div class="alert hidden" id="updateerror"></div>
<div class="doctext" style="display: none"><%= __('showdoc.readonly.loading') %></div>
<pre class="doctext" style="font-family: Menlo, Consolas, Monaco, 'Lucida Console', monospace;"><%= __('showdoc.readonly.loading') %></pre>

<script type="text/javascript">
var lastUpdate = null;
var lastOsf = null;

var hash = window.location.hash;
if(hash && hash.length > 1) {
    hash = hash.substr(1);
}
var activeFormat = hash || 'html';

setInterval(getDocText, 1000);
getDocText();

function dlbut() {
  var dldata;
  switch(activeFormat)
  {
      case 'raw':
      case 'osf':
      case 'chapter':
      case 'md':
      case 'reaper':
      case 'audacity':
          dldata = $('pre.doctext').text();
          break;
      case 'html':
      case 'htmllist':
          dldata = $('div.doctext').html();
          break;
  }

  $.post( 'http://cdn.shownot.es/paddl/showpad.php?mode=' + activeFormat + '&title=' + encodeURIComponent(document.getElementById('h2title').innerHTML), { mode: activeFormat, title: encodeURIComponent(document.getElementById('h2title').innerHTML), data: dldata } ).done(function(data) {
    newlocation = JSON.parse(data);
    window.location = newlocation.dlurl;
  });
}

function getDocText()
{
    if(!isPageVisible())
    {
        return;
    }

    $.ajax('/doc/<%=docname%>/text?t=' + (+lastUpdate))
        .success(
            function (res)
            {
                var status = res.status,
                  date = new Date(res.date),
                  text = res.text,
                  users = res.users;

                $('#users').text(users);
                $('#updateerror').addClass('hidden');

                if(status == "up2date")
                {
                    return;
                }

                lastUpdate = date;
                lastOsf = text;
                updateUI();
            }
        )
        .fail
        (
            function (res)
            {
                $('#updateerror').removeClass('hidden').text("<%=__('showdoc.readonly.updateerror')%>");
            }
        );
}

function updateUI()
{
    var exported, parsed;

    if(!lastOsf)
    {
        return;
    }

    if(activeFormat === 'raw')
    {
        exported = lastOsf;
    }
    else
    {
        parsed = tinyosf.Parser(lastOsf);
        exported = tinyosf.Export(parsed, osfExportModules[activeFormat]);
    }

    $('.doctext').hide();

    switch(activeFormat)
    {
        case 'raw':
        case 'osf':
        case 'chapter':
        case 'md':
        case 'reaper':
        case 'audacity':
            $('pre.doctext').show().text(exported);
            break;
        case 'html':
        case 'htmllist':
            $('div.doctext').show().html(exported);
            break;
    }
}

selectFormat(activeFormat);

$('#format.nav').click(
    function (evt)
    {
        var elem = $(evt.target),
          format = elem.data("format");

        if(format !== undefined)
        {
            $('#format.nav a').removeClass('blue').addClass('grey');
            activeFormat = format;
            selectFormat(format);
            updateUI();
        }
    }
);

function selectFormat(format)
{
    $(' a[data-format=' + activeFormat + ']').addClass('blue').removeClass('grey');
}

function isPageVisible()
{
    var visibility = "visible";

    if(document.webkitVisibilityState)
    {
        // Chrome
        visibility = document.webkitVisibilityState;
    }
    else if(document.visibilityState)
    {
        // FF
        visibility = document.visibilityState;
    }
    else if(document.hidden)
    {
        // Opera
        visibility = document.hidden ? "hidden" : "visible";
    }

    return visibility != "hidden";
}
</script>
